#!/bin/bash

#######
## Provision a new database cluster
#######

export DEBIAN_FRONTEND=noninteractive
ipAddress=$(ip -4 -oneline address show dev eth0 | awk '{print $4}' | cut -f1 -d/)
finalOctet=$(echo $ipAddress | cut -d. -f4)
rootPassword="boop"

iptables -F

  ## Configure the upstream MariaDB repository
echo "Updating Local Repository Configuration..."
apt-get -qq install -y software-properties-common > /tmp/software-properties.log
apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 >/tmp/key-add.log 2>&1
add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://mirror.lstn.net/mariadb/repo/10.1/ubuntu xenial main' >/tmp/repo-add.log 2>&1

echo "Installing MariaDB..."
apt-get -qq update >/dev/null 2>&1
apt-get -qq install -y mariadb-server mariadb-client rsync >/tmp/mariadb-install.log 2>&1

echo "Configuring Cluster..."

  ## Configure Cluster
cat <<EOI > /etc/mysql/my.cnf

[client]
port            = 3306
socket          = /var/run/mysqld/mysqld.sock
[mysqld_safe]
socket          = /var/run/mysqld/mysqld.sock
nice            = 0

[mysqld]
user            = mysql
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
port            = 3306
basedir         = /usr
datadir         = /var/lib/mysql
tmpdir          = /tmp
lc_messages_dir = /usr/share/mysql
lc_messages     = en_US
skip-external-locking
bind-address            = 0.0.0.0
max_connections         = 100
connect_timeout         = 5
wait_timeout            = 600
max_allowed_packet      = 16M
thread_cache_size       = 128
sort_buffer_size        = 4M
bulk_insert_buffer_size = 16M
tmp_table_size          = 32M
max_heap_table_size     = 32M
myisam_recover_options = BACKUP
key_buffer_size         = 128M
table_open_cache        = 400
myisam_sort_buffer_size = 512M
concurrent_insert       = 2
read_buffer_size        = 2M
read_rnd_buffer_size    = 1M
query_cache_limit               = 128K
query_cache_size                = 64M
log_warnings            = 2
slow_query_log_file     = /var/log/mysql/mariadb-slow.log
long_query_time = 10
log_slow_verbosity      = query_plan
log_bin                 = /var/log/mysql/mariadb-bin
log_bin_index           = /var/log/mysql/mariadb-bin.index
expire_logs_days        = 10
max_binlog_size         = 100M
default_storage_engine  = InnoDB
innodb_buffer_pool_size = 256M
innodb_log_buffer_size  = 8M
innodb_file_per_table   = 1
innodb_open_files       = 400
innodb_io_capacity      = 400
innodb_flush_method     = O_DIRECT

[mysqldump]
quick
quote-names
max_allowed_packet      = 16M

[mysql]

[isamchk]
key_buffer              = 16M

[galera]
binlog_format=ROW
innodb_autoinc_lock_mode=2
wsrep_on=ON
wsrep_provider=/usr/lib/galera/libgalera_smm.so
wsrep_cluster_name="joelscluster"
wsrep_cluster_address="gcomm://192.168.121.41,192.168.121.42,192.168.121.43"
wsrep_node_address="$ipAddress"
wsrep_node_name="$(hostname -s)"

!includedir /etc/mysql/conf.d/

EOI

  ## Enable service at reboot
/lib/systemd/systemd-sysv-install enable mysql >/dev/null 2>&1

echo -e "\\nY\\n${rootPassword}\\n${rootPassword}\\nY\\nY\\nn\\nY\\n" | mysql_secure_installation >/dev/null 2>&1

  ## db01 will bootstrap the cluster the others will wait and rejoin
if [[ "$(hostname -s)" == "db01" ]]; then

  systemctl stop mysql
  galera_new_cluster

    ## Finally, we create a user account for them to authenticate with. This will replicate when the other nodes join
  echo "CREATE USER 'testuser'@'%' IDENTIFIED BY 'testpass';" | mysql -p${rootPassword}
  echo "GRANT ALL on *.* to 'testuser'@'%' WITH GRANT OPTION" | mysql -p${rootPassword}


else

    ## Sleep to let db01 bootstrap the cluster
  sleep 30
  systemctl restart mysql

fi

  ## Add VIP for database cluster
echo -e '192.168.121.100  mariadb-cluster' >> /etc/hosts

echo "Provision of $(hostname -s) completed"
